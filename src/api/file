-- File API
-- Made by Arkandos

local _version = 1.1

function version() -- Should be part of any api to check for updates
	return _version
end

--[[ Open sFile in mode
   @sFile = path to the file to be read
   @mode 
		"l" = read one line and return it as a string
	    nil = read the entire file and return it as a string
]]-- 
function read(sFile, mode) 
	if mode == "l" then 
		hRead = assert(fs.open(sFile, "r"))
		local text = hRead.readLine()
		hRead.close()
		return text

	else -- Read the whole file
		hRead = assert(fs.open(sFile, "r"))
		local text = hRead.readAll()
		hRead.close()
		return text
	end
end

--[[ Write input into sFile using mode
	@sFile = path to the file to be written
	@mode
		"w" = overwrite the file
		"a" = append the file
	@input = string to be written to file
]]--
function write(sFile, mode, input) 
	hWrite = assert(fs.open(sFile, mode)) 
	local text = hWrite.write(input)
	hWrite.close()
end

--Begin: segment added by casillero. Currently used by no programs in OS, although I am developing a small game to add in the OS (while I was clearing my head to work on something else) which uses these new functions. If pull request is rejected, change battleship, to take this into account.

--[[
	path - the path of the file where the table is stored
	
	this function loads a stored table and returns it as a variable (type = table)
]]

function loadTable(path)
	local file = fs.open(path, "r")
	local data = textutils.unserialize(file.readAll())
	file.close()
	return data
end

--[[
	data - 
	path - the path of the file where the table is stored
	
function saveTable(data, path)
	local file = fs.open(path, "w")
	file.write(data)
	file.close()
end

--End casillero segment
